//----------------------------------------------------
// Module: Button
//----------------------------------------------------

//----------------------------------------------------
// / Set Modifier
//----------------------------------------------------

#{$buttons-class} {
  display: flex;
  flex-wrap: wrap;
  &:not(.is-bar) {
    margin-left: (-1 * $buttons-gap-default);
    margin-bottom: (-1 * $buttons-gap-default);
    > {
      #{$buttons-class},
      #{$button-class} {
        margin-left: $buttons-gap-default;
        margin-bottom: $buttons-gap-default;
      }
    }
  }
  > {
    #{$buttons-class} {
      display: inline-flex;
    }
  }
  &.is-middle {
    align-items: center;
  }
  &.is-bottom {
    align-items: flex-end;
  }
  &.is-center {
    justify-content: center;
  }
  &.is-right {
    justify-content: flex-end;
  }
  &.is-between {
    justify-content: space-between;
  }
  &.is-around {
    justify-content: space-around;
  }
}

//----------------------------------------------------
// / Set Bar
//----------------------------------------------------

#{$buttons-bar-class} {
  &.is-bar {
    flex-wrap: nowrap;
    > {
      #{$button-class} {
        border-radius: 0;
        overflow: hidden;
        &:not(.is-round):first-child {
          border-top-left-radius: $button-border-radius;
          border-bottom-left-radius: $button-border-radius;
        }
        &:not(.is-round):last-child {
          border-top-right-radius: $button-border-radius;
          border-bottom-right-radius: $button-border-radius;
        }
        &.is-round:first-child {
          border-top-left-radius: $button-round-border-radius;
          border-bottom-left-radius: $button-round-border-radius;
        }
        &.is-round:last-child {
          border-top-right-radius: $button-round-border-radius;
          border-bottom-right-radius: $button-round-border-radius;
        }
        &:nth-child(2) {
          border-left: none;
          ~ {
            #{$button-class} {
              border-left: none;
            }
          }
        }
      }
    }
  }
}

//----------------------------------------------------
// / Single Modifier
//----------------------------------------------------

#{$button-class} {
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  align-self: flex-start;
  white-space: nowrap;
  padding: $button-padding;
  border-radius: $button-border-radius;
  line-height: $button-line-height;
  text-align: center;
  transition: $button-transition;
  &[type="button"],
  &[type="reset"],
  &[type="submit"] {
    color: $body-text-color;
  }
  &.is-disabled,
  &[disabled] {
    cursor: not-allowed;
  }
  &:focus {
    box-shadow: $button-focus-shadow;
    outline: none;
  }
  &.is-round {
    border-radius: $button-round-border-radius;
  }
  &.is-circle {
    position: relative;
    width: $button-circle-width;
    height: $button-circle-height;
    padding: 0;
    border-radius: $button-circle-border-radius;
    line-height: 1;
  }
}

//----------------------------------------------------
// / Floating
//----------------------------------------------------

#{$button-class} {
  &.is-floating:not(.is-disabled) {
    box-shadow: $button-floating-shadow;
    &:focus,
    &:hover:focus {
      box-shadow: $button-floating-focus-shadow;
    }
    &:hover {
      box-shadow: $button-floating-hover-shadow;
    }
  }
}

//----------------------------------------------------
// / Plain
//----------------------------------------------------

#{$button-class} {
  &.is-plain {
    background-color: $button-plain-default-background-color;
    border: $button-border-width solid transparent;
    &:hover {
      background-color: $button-plain-default-hover-background-color;
    }
    @each $key, $value in $pattern-color-theme {
      &.is-#{$key} {
        background-color: $value;
        color: $light;
        &:hover {
          background-color: darken($value, 5%);
        }
      }
    }
    &.is-disabled,
    &.is-disabled:hover,
    &[disabled],
    &[disabled]:hover {
      background-color: $button-disabled-background-color;
      color: $button-disabled-text-color;
    }
  }
}

//----------------------------------------------------
// / Melt
//----------------------------------------------------

#{$button-class} {
  &.is-melt {
    background-color: transparent;
    border: $button-border-width solid transparent;
    &:hover {
      background-color: $button-melt-default-hover-background-color;
    }
    @each $key, $value in $pattern-color-theme {
      &.is-#{$key} {
        color: $value;
      }
    }
    &.is-disabled,
    &.is-disabled:hover,
    &[disabled],
    &[disabled]:hover {
      color: $button-disabled-text-color;
      background-color: transparent;
    }
  }
}

//----------------------------------------------------
// / Outline
//----------------------------------------------------

#{$button-class} {
  &.is-outline {
    background-color: $button-outline-default-background-color;
    border: $button-border-width solid $button-outline-default-border-color;
    &:hover {
      background-color: $button-outline-default-hover-background-color;
    }
    @each $key, $value in $pattern-color-theme {
      &.is-#{$key} {
        border-color: $value;
        color: $value;
        &:hover {
          background-color: $value;
          border-color: transparent;
          color: $light;
        }
      }
    }
    &.is-disabled,
    &.is-disabled:hover,
    &[disabled],
    &[disabled]:hover {
      background-color: $button-disabled-background-color-alpha;
      color: $button-disabled-text-color;
    }
  }
}

//----------------------------------------------------
// / Ghost
//----------------------------------------------------

#{$button-class} {
  &.is-ghost {
    background-color: transparent;
    border: $button-border-width solid $button-ghost-default-border-color;
    color: $button-ghost-default-text-color;
    &:hover {
      background-color: $button-ghost-default-hover-background-color;
      color: $button-ghost-default-hover-text-color;
    }
    @each $key, $value in $pattern-color-theme {
      &.is-#{$key} {
        border-color: lighten($value, 30%);
        color: lighten($value, 30%);
        &:hover {
          background-color: $value;
          border-color: transparent;
          color: $light;
        }
      }
    }
    &.is-disabled,
    &.is-disabled:hover,
    &[disabled],
    &[disabled]:hover {
      background-color: $button-ghost-disabled-background-color;
      border-color: $button-ghost-disabled-border-color;
      color: $button-ghost-disabled-text-color;
    }
  }
}
