//----------------------------------------------------
// Module: Button
//----------------------------------------------------

//----------------------------------------------------
// / Set Modifier
//----------------------------------------------------

.buttons {
  display: flex;
  flex-wrap: wrap;
  &:not(.is-bar) {
    margin-left: (-1 * $buttons-gap-default);
    margin-bottom: (-1 * $buttons-gap-default);
  }
  &:not(.is-bar) > .buttons,
  &:not(.is-bar) > .button {
    margin-left: $buttons-gap-default;
    margin-bottom: $buttons-gap-default;
  }
  > .buttons {
    display: inline-flex;
  }
  &.is-middle {
    align-items: center;
  }
  &.is-bottom {
    align-items: flex-end;
  }
  &.is-center {
    justify-content: center;
  }
  &.is-right {
    justify-content: flex-end;
  }
  &.is-between {
    justify-content: space-between;
  }
  &.is-around {
    justify-content: space-around;
  }
}

//----------------------------------------------------
// / Set Bar
//----------------------------------------------------

.buttons.is-bar,
.field.is-bar {
  flex-wrap: nowrap;
  > .button {
    border-radius: 0;
    overflow: hidden;
  }
  > .button:not(.is-round):first-child {
    border-top-left-radius: $button-border-radius;
    border-bottom-left-radius: $button-border-radius;
  }
  > .button:not(.is-round):last-child {
    border-top-right-radius: $button-border-radius;
    border-bottom-right-radius: $button-border-radius;
  }
  > .button.is-round:first-child {
    border-top-left-radius: $button-round-border-radius;
    border-bottom-left-radius: $button-round-border-radius;
  }
  > .button.is-round:last-child {
    border-top-right-radius: $button-round-border-radius;
    border-bottom-right-radius: $button-round-border-radius;
  }
  > .button:nth-child(2),
  > .button:nth-child(2) ~ .button {
    border-left: none;
  }
}

//----------------------------------------------------
// / Single Modifier
//----------------------------------------------------

.button {
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  align-self: flex-start;
  white-space: nowrap;
  padding: $button-padding;
  border-radius: $button-border-radius;
  line-height: $button-line-height;
  text-align: center;
  transition: $button-transition;
  &[type="button"],
  &[type="reset"],
  &[type="submit"] {
    color: $body-text-color;
  }
  &.is-disabled,
  &[disabled] {
    cursor: not-allowed;
  }
  &.is-round {
    border-radius: $button-round-border-radius;
  }
  &.is-circle {
    position: relative;
    width: $button-circle-width;
    height: $button-circle-height;
    padding: 0;
    border-radius: $button-circle-border-radius;
    line-height: 1;
  }
}

//----------------------------------------------------
// / Floating
//----------------------------------------------------

.button.is-floating:not(.is-disabled) {
  box-shadow: $button-floating-shadow;
  &:hover {
    box-shadow: $button-floating-hover-shadow;
  }
}

//----------------------------------------------------
// / Plain
//----------------------------------------------------

.button.is-plain {
  background-color: $button-plain-default-background-color;
  border: $button-border-width solid transparent;
  &:hover {
    background-color: $button-plain-default-hover-background-color;
  }
  @each $key, $value in $pattern-color-theme {
    &.is-#{$key} {
      background-color: $value;
      color: $light;
      &:hover {
        background-color: darken($value, 5%);
      }
    }
  }
  &.is-disabled,
  &.is-disabled:hover,
  &[disabled],
  &[disabled]:hover {
    background-color: $button-disabled-background-color;
    color: $button-disabled-text-color;
  }
}

//----------------------------------------------------
// / Melt
//----------------------------------------------------

.button.is-melt {
  background-color: transparent;
  border: $button-border-width solid transparent;
  &:hover {
    background-color: $button-melt-default-hover-background-color;
  }
  @each $key, $value in $pattern-color-theme {
    &.is-#{$key} {
      color: $value;
    }
  }
  &.is-disabled,
  &.is-disabled:hover,
  &[disabled],
  &[disabled]:hover {
    color: $button-disabled-text-color;
    background-color: transparent;
  }
}

//----------------------------------------------------
// / Outline
//----------------------------------------------------

.button.is-outline {
  background-color: $button-outline-default-background-color;
  border: $button-border-width solid $button-outline-default-border-color;
  &:hover {
    background-color: $button-outline-default-hover-background-color;
  }
  @each $key, $value in $pattern-color-theme {
    &.is-#{$key} {
      border-color: $value;
      color: $value;
      &:hover {
        background-color: $value;
        border-color: transparent;
        color: $light;
      }
    }
  }
  &.is-disabled,
  &.is-disabled:hover,
  &[disabled],
  &[disabled]:hover {
    background-color: $button-disabled-background-color-alpha;
    color: $button-disabled-text-color;
  }
}

//----------------------------------------------------
// / Ghost
//----------------------------------------------------

.button.is-ghost {
  background-color: transparent;
  border: $button-border-width solid $button-ghost-default-border-color;
  color: $button-ghost-default-text-color;
  &:hover {
    background-color: $button-ghost-default-hover-background-color;
    color: $button-ghost-default-hover-text-color;
  }
  @each $key, $value in $pattern-color-theme {
    &.is-#{$key} {
      border-color: lighten($value, 30%);
      color: lighten($value, 30%);
      &:hover {
        background-color: $value;
        border-color: transparent;
        color: $light;
      }
    }
  }
  &.is-disabled,
  &.is-disabled:hover,
  &[disabled],
  &[disabled]:hover {
    background-color: $button-ghost-disabled-background-color;
    border-color: $button-ghost-disabled-border-color;
    color: $button-ghost-disabled-text-color;
  }
}
