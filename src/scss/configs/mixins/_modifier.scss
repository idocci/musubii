//----------------------------------------------------
// Mixins: Modifier
//----------------------------------------------------

//----------------------------------------------------
// / Is Gap
//----------------------------------------------------

@mixin --is-gap-all($size, $value, $child-selector) {
  &.is-gap-#{$size} {
    margin-left: -$value;
    margin-bottom: -$value;
    > {
      #{$child-selector} {
        padding-left: $value;
        padding-bottom: $value;
      }
    }
  }
}

@mixin --is-gap-row($size, $value, $child-selector) {
  &.is-gap-row-#{$size} {
    margin-bottom: -$value;
    > {
      #{$child-selector} {
        padding-bottom: $value;
      }
    }
  }
}

@mixin --is-gap-column($size, $value, $child-selector) {
  &.is-gap-column-#{$size} {
    margin-bottom: -$value;
    > {
      #{$child-selector} {
        padding-bottom: $value;
      }
    }
  }
}

//----------------------------------------------------
// / Is Flex
//----------------------------------------------------

@mixin --is-flex() {
  &.is-flex {
    display: flex;
  }
  &.is-inline-flex {
    display: inline-flex;
  }
  &.is-flex,
  &.is-inline-flex {
    &:not(.is-nowrap) {
      flex-wrap: wrap;
    }
    &.is-baseline {
      align-items: baseline;
    }
    &.is-middle {
      align-items: center;
    }
    &.is-bottom {
      align-items: flex-end;
    }
    &.is-center {
      justify-content: center;
    }
    &.is-right {
      justify-content: flex-end;
    }
    &.is-between {
      justify-content: space-between;
    }
    &.is-around {
      justify-content: space-around;
    }
    &.is-reverse {
      flex-direction: row-reverse;
    }
  }
}

//----------------------------------------------------
// / Is Background
//----------------------------------------------------

@mixin --is-bg($bg-name, $bg-color) {
  &.is-bg-#{$bg-name} {
    background-color: $bg-color;
  }
}

//----------------------------------------------------
// / Is Outline
//----------------------------------------------------

@mixin --is-outline($border-width, $border-style, $border-color) {
  &.is-outline {
    border: $border-width $border-style $border-color;
  }
}

@mixin --is-outline-single($border-width, $border-style, $border-color) {
  &.is-outline-top {
    border-top: $border-width $border-style $border-color;
  }
  &.is-outline-right {
    border-right: $border-width $border-style $border-color;
  }
  &.is-outline-bottom {
    border-bottom: $border-width $border-style $border-color;
  }
  &.is-outline-left {
    border-left: $border-width $border-style $border-color;
  }
}

//----------------------------------------------------
// / Is Separate
//----------------------------------------------------

@mixin --is-separate($border-width, $border-style, $border-color) {
  &.is-separate > *:not(:last-child) {
    border-bottom: $border-width $border-style $border-color;
  }
  &.is-separate-parent > *:not(:last-child) .is-separate-child {
    border-bottom: $border-width $border-style $border-color;
  }
}

//----------------------------------------------------
// / Is Link
//----------------------------------------------------

@mixin --is-link($transition, $hover-background-color) {
  &.is-link {
    cursor: pointer;
    transition: $transition;
    &:not(.is-disabled):not([disabled]):hover {
      background-color: $hover-background-color;
    }
    &.is-disabled,
    &[disabled] {
      cursor: not-allowed;
      pointer-events: none;
    }
  }
}

//----------------------------------------------------
// / Is Angle
//----------------------------------------------------

@mixin --is-angle($angle-size, $angle-border-width, $angle-border-color) {
  &.is-angle-right,
  &.is-angle-left {
    &:after {
      content: "";
      position: absolute;
      top: 50%;
      width: $angle-size;
      height: $angle-size;
      border-top: $angle-border-width solid $angle-border-color;
      border-right: $angle-border-width solid $angle-border-color;
      z-index: 2;
    }
  }
  &.is-angle-right {
    padding-right: $angle-size * 3.5;
    &:after {
      right: $angle-size * 1.5;
      transform: translateY(-50%) rotate(45deg);
    }
  }
  &.is-angle-left {
    padding-left: $angle-size * 3.5;
    &:after {
      left: $angle-size * 1.5;
      transform: translateY(-50%) rotate(-135deg);
    }
  }
  &.is-angle-left,
  &.is-angle-right {
    &.is-angle-up {
      &:after {
        transform: translateY(-30%) rotate(-45deg);
      }
    }
    &.is-angle-down {
      &:after {
        transform: translateY(-70%) rotate(135deg);
      }
    }
  }
}

//----------------------------------------------------
// / Is Radius
//----------------------------------------------------

@mixin --is-radius-all($size, $value) {
  &.is-radius-#{$size} {
    border-radius: $value;
  }
}
