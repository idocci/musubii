//----------------------------------------------------
// Layouts: Grid
//----------------------------------------------------

//----------------------------------------------------
// / Variables (Default)
//----------------------------------------------------

// Option
$option-mixin-mode: false !default;
$option-style-grid: true !default;

// Selectors
$selector-grid: ".grid" !default;
$selector-column: ".column" !default;

// Gap Size
$gap-size-xxl: $space-xxl !default;
$gap-size-xl: $space-xl !default;
$gap-size-lg: $space-lg !default;
$gap-size-md: $space-md !default;
$gap-size-sm: $space-sm !default;
$gap-size-xs: $space-xs !default;
$gap-size-xxs: $space-xxs !default;

//----------------------------------------------------
// / Mixins (Default)
//----------------------------------------------------

// Export Style
@mixin export-style-grid() {
  @if $option-mixin-mode == false and $option-style-grid == true {
    @content;
  }
}

//----------------------------------------------------
// / Style - Grid
//----------------------------------------------------

@mixin musubii-style-grid() {
  display: flex;
  flex-wrap: wrap;
  &.is-baseline {
    align-items: baseline;
  }
  &.is-middle {
    align-items: center;
  }
  &.is-bottom {
    align-items: flex-end;
  }
  &.is-center {
    justify-content: center;
  }
  &.is-right {
    justify-content: flex-end;
  }
  &.is-between {
    justify-content: space-between;
  }
  &.is-around {
    justify-content: space-around;
  }
  &.is-reverse {
    flex-direction: row-reverse;
  }
  &.is-stretch {
    > {
      #{$selector-column} {
        display: flex;
      }
    }
  }
}

@include export-style-grid() {
  #{$selector-grid} {
    @include musubii-style-grid();
  }
}

//----------------------------------------------------
// / Style - Grid Gap
//----------------------------------------------------

@mixin musubii-style-grid-gap-all() {
  @include --is-gap-all(xxl, $gap-size-xxl, $selector-column);
  @include --is-gap-all(xl, $gap-size-xl, $selector-column);
  @include --is-gap-all(lg, $gap-size-lg, $selector-column);
  @include --is-gap-all(md, $gap-size-md, $selector-column);
  @include --is-gap-all(sm, $gap-size-sm, $selector-column);
  @include --is-gap-all(xs, $gap-size-xs, $selector-column);
  @include --is-gap-all(xxs, $gap-size-xxs, $selector-column);
}

@include export-style-grid() {
  #{$selector-grid} {
    @include musubii-style-grid-gap-all();
  }
}

//----------------------------------------------------

@mixin musubii-style-grid-gap-row() {
  @include --is-gap-row(xxl, $gap-size-xxl, $selector-column);
  @include --is-gap-row(xl, $gap-size-xl, $selector-column);
  @include --is-gap-row(lg, $gap-size-lg, $selector-column);
  @include --is-gap-row(md, $gap-size-md, $selector-column);
  @include --is-gap-row(sm, $gap-size-sm, $selector-column);
  @include --is-gap-row(xs, $gap-size-xs, $selector-column);
  @include --is-gap-row(xxs, $gap-size-xxs, $selector-column);
}

@include export-style-grid() {
  #{$selector-grid} {
    @include musubii-style-grid-gap-row();
  }
}

//----------------------------------------------------

@mixin musubii-style-grid-gap-column() {
  @include --is-gap-column(xxl, $gap-size-xxl, $selector-column);
  @include --is-gap-column(xl, $gap-size-xl, $selector-column);
  @include --is-gap-column(lg, $gap-size-lg, $selector-column);
  @include --is-gap-column(md, $gap-size-md, $selector-column);
  @include --is-gap-column(sm, $gap-size-sm, $selector-column);
  @include --is-gap-column(xs, $gap-size-xs, $selector-column);
  @include --is-gap-column(xxs, $gap-size-xxs, $selector-column);
}

@include export-style-grid() {
  #{$selector-grid} {
    @include musubii-style-grid-gap-column();
  }
}
