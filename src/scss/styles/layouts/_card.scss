//----------------------------------------------------
// Layout: Card
//----------------------------------------------------

//----------------------------------------------------
// / Variables
//----------------------------------------------------

$use-style-card: true !default;

//----------------------------------------------------
// / Export Setting
//----------------------------------------------------

@mixin export-card {
  @if $use-style-card == true {
    @content;
  }
}

//----------------------------------------------------
// / Basic
//----------------------------------------------------

@include export-card {
  .card {
    position: relative;
    display: block;
  }
}

//----------------------------------------------------
// / Custom
//----------------------------------------------------

@include export-card {
  .card {
    @each $custom in $pattern-card-custom {
      @if $custom == "flexbox" {
        &.is-flex {
          display: flex;
        }
        &.is-inline-flex {
          display: inline-flex;
        }
        &.is-flex,
        &.is-inline-flex {
          &:not(.is-nowrap) {
            flex-wrap: wrap;
          }
          &.is-baseline {
            align-items: baseline;
          }
          &.is-middle {
            align-items: center;
          }
          &.is-bottom {
            align-items: flex-end;
          }
          &.is-center {
            justify-content: center;
          }
          &.is-right {
            justify-content: flex-end;
          }
          &.is-between {
            justify-content: space-between;
          }
          &.is-around {
            justify-content: space-around;
          }
          &.is-reverse {
            flex-direction: row-reverse;
          }
        }
      }
      @if $custom == "background" {
        &.is-bg,
        &.is-bg-light {
          background-color: $card-background-color;
        }
      }
      @if $custom == "outline" {
        &.is-outline {
          border: $card-border-width solid $card-border-color;
        }
      }
      @if $custom == "radius" {
        @each $key, $value in $pattern-card-radius {
          @if $key == "md" {
            &.is-radius,
            &.is-radius-#{$key} {
              border-radius: $value;
            }
          } @else {
            &.is-radius-#{$key} {
              border-radius: $value;
            }
          }
        }
      }
      @if $custom == "floating" {
        &.is-floating {
          box-shadow: $card-floating-shadow;
          &.is-link,
          &.is-zoom {
            &:hover {
              box-shadow: $card-floating-hover-shadow;
            }
            &:focus {
              box-shadow: $card-floating-focus-shadow;
              outline: none;
            }
          }
        }
      }
      @if $custom == "link" {
        &.is-link {
          cursor: pointer;
          transition: $card-link-transition;
          &:not(.is-disabled):not([disabled]):hover {
            background-color: $card-link-hover-background-color;
          }
          &:focus {
            box-shadow: $card-focus-shadow;
            outline: none;
          }
          &.is-disabled,
          &[disabled] {
            cursor: not-allowed;
            pointer-events: none;
          }
        }
      }
      @if $custom == "zoom" {
        &.is-zoom {
          cursor: pointer;
          transition: $card-zoom-transition;
          &:not(.is-disabled):not([disabled]):hover {
            transform: $card-zoom-transform;
          }
          &:focus {
            box-shadow: $card-focus-shadow;
            outline: none;
          }
          &.is-disabled,
          &[disabled] {
            cursor: not-allowed;
            pointer-events: none;
          }
        }
      }
    }
  }
}
